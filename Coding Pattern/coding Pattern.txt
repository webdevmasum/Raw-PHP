1. Service Pattern:


class UserService {
    public function createUser($data) {
        return User::create($data);
    }
}


class UserController {
    protected $userService;
    public function __construct(UserService $userService) {
        $this->userService = $userService;
    }

    public function store(Request $request) {
        $user = $this->userService->createUser($request->all());
        return response()->json($user);
    }
}




2. Repository Pattern:

class UserRepository {
    public function getAllUsers() {
        return User::all();
    }

    public function createUser($data) {
        return User::create($data);
    }
}



class UserService {
    protected $userRepo;
    public function __construct(UserRepository $userRepo) {
        $this->userRepo = $userRepo;
    }

    public function createUser($data) {
        return $this->userRepo->createUser($data);
    }
}



class UserController {
    protected $userService;
    public function __construct(UserService $userService) {
        $this->userService = $userService;
    }

    public function store(Request $request) {
        $user = $this->userService->createUser($request->all());
        return response()->json($user);
    }
}
